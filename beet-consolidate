#!/usr/bin/python3
import os, os.path, re, shutil, filecmp, beets

with beets.connect() as conn:
    
    def merge(album_guid,p,q):
    
        (prelpath,ppath,pextra) = p.paths()
        if pextra is not "":
            return False
        (qrelpath,qpath,qextra) = q.paths()
        if qextra is "":
            return False
        
        print ("Merging " + album_guid + ":")
        print ("  " + qrelpath)
        print ("  into")
        print ("  " + prelpath)

        filenames = sorted(os.listdir(qpath))
        # scan for collisions first and remove duplicates
        collisions = False
        for fname in filenames:
            qfpath = os.path.join(qpath,fname)
            if fname == "album.nfo":
                pass
            else:
                pfpath = os.path.join(ppath,fname)
                if os.path.isfile(pfpath):
                    if filecmp.cmp(pfpath,qfpath):
                        print ("Duplicate: "+fname)
                    else:
                        print ("Collision: "+fname)
                        collisions = True
                else:
                    print ("Movable: "+fname)

        if collisions:
            print ("Collisions, not merging")
        else:
            print ("Merging...")
            for fname in filenames:
                qfpath = os.path.join(qpath,fname)
                if fname == "album.nfo":
                    os.remove(qfpath)
                else:
                    pfpath = os.path.join(ppath,fname)
                    if os.path.isfile(pfpath):
                        os.remove(qfpath)
                    else:
                        os.rename(qfpath,pfpath)
            conn.execute("UPDATE items SET album_id=? WHERE album_id=?",[p.row_id,q.row_id])
            
            os.rmdir(qpath)
            conn.execute("DELETE FROM albums WHERE id=?",[q.row_id])
            conn.commit()
        return True
        
    
    for (album_guid,a_id,b_id) in conn.execute("SELECT a.mb_albumid, a.id, b.id FROM albums AS a, albums AS b WHERE a.mb_albumid = b.mb_albumid AND b.id > a.id"):

        a = beets.Album(conn,a_id)
        b = beets.Album(conn,b_id)

        if merge(album_guid,a,b):
            pass
        elif merge(album_guid,b,a):
            pass
        else:
            print ("Couldn't match:")
            print ("  "+a.desc())
            print ("  "+b.desc())
